package me.deveon.quick_ideas.wheel_of_prizes.cmds.admin;import com.google.common.collect.ImmutableMap;import java.util.Arrays;import java.util.Collections;import java.util.HashMap;import java.util.UUID;import java.util.logging.Level;import me.deveon.quick_ideas.main.utils.Inventory_Utils;import me.deveon.quick_ideas.main.utils.Messages_Templates;import me.deveon.quick_ideas.wheel_of_prizes.cmds.admin.subcmds.stopSubCommand;import me.deveon.quick_ideas.wheel_of_prizes.main.WOPMain;import me.deveon.quick_ideas.wheel_of_prizes.wheel.onSpin;import org.bukkit.Bukkit;import org.bukkit.ChatColor;import org.bukkit.Material;import org.bukkit.command.Command;import org.bukkit.command.CommandExecutor;import org.bukkit.command.CommandSender;import org.bukkit.command.ConsoleCommandSender;import org.bukkit.entity.Player;import org.bukkit.inventory.ItemStack;import org.bukkit.plugin.Plugin;public class AdminCmd implements CommandExecutor {  private final HashMap<String, String> help;  private ImmutableMap<String, CommandExecutor> commands;  private Plugin instance;  public AdminCmd(Plugin plugin) {    instance = plugin;    this.commands = ImmutableMap.<String, CommandExecutor>builder()        .put("stop", new stopSubCommand(plugin))        //.put("remove", new LockServerSubCommand(main))        .build();    this.help = new HashMap<>();    help.put("WOPA <Player Name>", "Allow a player to spin.");    help.put("WOPA Stop", "Stop Game for a player.");  }  @Override  public boolean onCommand(CommandSender commandSender, Command command, String s, String[] strings) {    if ((commandSender instanceof ConsoleCommandSender)) {      commandSender.sendMessage("Command can only be executed by a player");      return false;    }    Player player = (Player) commandSender;    if ((!commandSender.hasPermission("deveon_w.wopa.*"))) {      player.sendMessage("No perm");      return false;    }    if (strings.length != 0) {      String subCommand = strings[0];      CommandExecutor executor = this.commands.get(subCommand.toLowerCase());      if (executor != null) {        return executor.onCommand(commandSender, command, s, strings);      } else if (Bukkit.getServer().getPlayer(subCommand).isOnline()) { //check if subarg is an online player's name//        if (onSpin.getParticipant() == null) {          UUID userID = Bukkit.getPlayer(subCommand).getUniqueId();          onSpin.setParticipant(userID);          loadWheel(userID);          return true;        } else {          Messages_Templates.consoleMessageWarpper(Arrays.asList("DISABLED WOP"), Level.WARNING);          return false;        }      }    }    Messages_Templates.helpCommand(player, ChatColor.YELLOW, ChatColor.DARK_GRAY, this.help);    return false;  }  private void loadWheel(UUID player) {    if (onSpin.getParticipant() != null & instance.getServer().getPlayer(player).isOnline()) {      Player p = Bukkit.getPlayer(player);      Collections.shuffle(onSpin.getGlassBlocks());      WOPMain.getWheelOfPrizes().startSlotLock(p);      for (int i = 0; i < 9; i++) {        if (i != 4) {          p.getInventory().setItem(i, new ItemStack(onSpin.getGlassBlocks().get(i)));        } else {          ItemStack lever = Inventory_Utils.createItem(Material.LEVER, "" + ChatColor.YELLOW + ChatColor.BOLD + "Pull To Spin Wheel!", new String[]{ChatColor.WHITE + "CLICK TO WIN!"});          p.getInventory().setItem(i, lever);        }      }    }  }  private void help(CommandSender sender) {  }}