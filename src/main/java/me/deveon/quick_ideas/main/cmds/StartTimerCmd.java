package me.deveon.quick_ideas.main.cmds;import com.google.common.collect.ImmutableMap;import java.util.HashMap;import me.deveon.quick_ideas.main.scoreBoard.BaseScoreBoard;import me.deveon.quick_ideas.main.utils.Messages_Templates;import org.bukkit.Bukkit;import org.bukkit.ChatColor;import org.bukkit.Sound;import org.bukkit.command.Command;import org.bukkit.command.CommandExecutor;import org.bukkit.command.CommandSender;import org.bukkit.command.ConsoleCommandSender;import org.bukkit.entity.Player;import org.bukkit.plugin.Plugin;public class StartTimerCmd implements CommandExecutor {  private final HashMap<String, String> help;  private ImmutableMap<String, CommandExecutor> commands;  private Plugin instance;  public StartTimerCmd(Plugin plugin) {    instance = plugin;    this.commands = ImmutableMap.<String, CommandExecutor>builder()        //.put("stop", new StartTimer(plugin))        //.put("remove", new LockServerSubCommand(main))        .build();    this.help = new HashMap<>();    help.put("Timer Start", "Start Timer for players.");    help.put("Timer Stop", "Pause.");    help.put("Timer Restart", "Restart Timer.");    help.put("Timer Reset", "Reset Timer.");  }  @Override  public boolean onCommand(CommandSender commandSender, Command command, String s, String[] strings) {    if ((commandSender instanceof ConsoleCommandSender)) {      commandSender.sendMessage("Command can only be executed by a player");      return false;    }    Player player = (Player) commandSender;    if ((!commandSender.hasPermission("deveon_w.sd.*"))) {      player.sendMessage("No perm");      return false;    }    if (strings.length != 0) {      String subCommand = strings[0];      CommandExecutor executor = this.commands.get(subCommand.toLowerCase());      if (subCommand.equalsIgnoreCase("start")) {        if (!BaseScoreBoard.isTimerPaused()) {          if (BaseScoreBoard.getTimer() != 0 & BaseScoreBoard.getTimer() == -1) {            BaseScoreBoard.forceTimerStop(false);            BaseScoreBoard.toggleTimer(true);            Bukkit.getOnlinePlayers().forEach(p -> p.playSound(p.getLocation(), Sound.BLOCK_NOTE_BLOCK_PLING, 1, 1));            Messages_Templates.customMessage(player, "" + ChatColor.GREEN + ChatColor.BOLD + "Timer Started!", "", ChatColor.BLACK,                ChatColor.WHITE);          } else {            Messages_Templates.customMessage(player, "" + ChatColor.YELLOW + ChatColor.BOLD + "Timer ALREADY Started!", "", ChatColor.BLACK,                ChatColor.WHITE);          }        } else {          BaseScoreBoard.toggleTimerPause();          Bukkit.getOnlinePlayers().forEach(p -> p.playSound(p.getLocation(), Sound.BLOCK_NOTE_BLOCK_PLING, 1, 1));          Messages_Templates.customMessage(player, "" + ChatColor.GREEN + ChatColor.BOLD + "Timer Resumed!", "", ChatColor.BLACK,              ChatColor.WHITE);        }        return true;      } else if (subCommand.equalsIgnoreCase("stop")) {        if (!BaseScoreBoard.isTimerPaused()) {          BaseScoreBoard.toggleTimerPause();          Bukkit.getOnlinePlayers().forEach(p -> p.playSound(p.getLocation(), Sound.BLOCK_NOTE_BLOCK_BASEDRUM, 1, 1));          Messages_Templates.customMessage(player, "" + ChatColor.RED + ChatColor.BOLD + "Timer Stopped!", "", ChatColor.BLACK,              ChatColor.WHITE);        } else {          Messages_Templates.customMessage(player, "" + ChatColor.DARK_RED + ChatColor.BOLD + "Timer ALREADY Stopped!", "", ChatColor.BLACK,              ChatColor.WHITE);        }        return true;      } else if (subCommand.equalsIgnoreCase("reset")) {        if (BaseScoreBoard.getTimer() != 0 & BaseScoreBoard.getTimer() != -1) {          BaseScoreBoard.forceTimerStop(true);          BaseScoreBoard.toggleTimer(false);          Bukkit.getOnlinePlayers().forEach(p -> p.playSound(p.getLocation(), Sound.BLOCK_NOTE_BLOCK_BASS, 1, 1));          Messages_Templates.customMessage(player, "" + ChatColor.RED + ChatColor.BOLD + "Timer Reset!", "", ChatColor.BLACK,              ChatColor.WHITE);        } else {          Messages_Templates.customMessage(player, "" + ChatColor.DARK_RED + ChatColor.BOLD + "Timer Already Reset!", "", ChatColor.BLACK,              ChatColor.WHITE);        }        return true;      } else if (subCommand.equalsIgnoreCase("restart")) {        player.performCommand("timer reset");        player.performCommand("timer start");        player.playSound(player.getLocation(), Sound.BLOCK_NOTE_BLOCK_FLUTE, 1, 1);        Messages_Templates.customMessage(player, "" + ChatColor.RED + ChatColor.BOLD + "Timer Restarted!", "", ChatColor.BLACK,            ChatColor.WHITE);        return true;      }    }    Messages_Templates.helpCommand(player, ChatColor.BLACK, ChatColor.WHITE, this.help);    return false;  }}